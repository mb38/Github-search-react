{"version":3,"sources":["components/Navbar/Navbar.js","context/Alert/alertContext.js","context/github/githubContext.js","components/Search/Search.js","components/Card/Card.js","pages/Home.js","pages/About.js","components/Repos/Repos.js","pages/Profile.js","components/Alert/Alert.js","context/Alert/alertReducer.js","context/types.js","context/Alert/AlertState.js","context/github/GithubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithabState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cbaa6ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n            <div className=\"navbar-brand\">\r\n                Github Поиск\r\n            </div>\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"/about\" className=\"nav-link\">Информация</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext()\r\n","import {createContext} from 'react'\r\n\r\nexport const GithubContext = createContext()","import React, {useContext, useState} from 'react';\r\nimport {AlertContext} from \"../../context/Alert/alertContext\";\r\nimport {GithubContext} from \"../../context/github/githubContext\";\r\n\r\nexport const Search = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const github = useContext(GithubContext)\r\n\r\n    const onSubmit = event => {\r\n        if (event.key !== 'Enter') {\r\n            return\r\n        }\r\n        github.clearUsers()\r\n\r\n        if (value.trim()) {\r\n            alert.hide()\r\n            github.search(value.trim())\r\n        } else {\r\n            alert.show('Введите данные пользователя!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Введите ник пользователя...\"\r\n                value={value}\r\n                onChange={event => setValue(event.target.value)}\r\n                onKeyPress={onSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const Card = ({user}) => (\r\n    <div className=\"card\">\r\n        <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n        <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{user.login}</h5>\r\n            <Link to={'/Profile/' + user.login} className=\"btn btn-primary\">Открыть</Link>\r\n        </div>\r\n    </div>\r\n)\r\n","import React, {Fragment, useContext} from 'react';\r\nimport {Search} from \"../components/Search/Search\";\r\nimport {Card} from \"../components/Card/Card\";\r\nimport {GithubContext} from \"../context/github/githubContext\";\r\n\r\nexport const Home = () => {\r\n    const {loading, users} = useContext(GithubContext)\r\n\r\n    return (\r\n        <Fragment>\r\n            <Search />\r\n\r\n            <div className=\"row\">\r\n                {loading\r\n                    ? <p className=\"text-center\">Загрузка...</p>\r\n                    : users.map(user => (\r\n                        <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n                            <Card user={user} />\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Информация</h1>\r\n                <p className=\"lead\">Версия 1.0</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Fragment} from 'react';\r\n\r\nexport const Repos = ({repos}) => (\r\n    <Fragment>\r\n        {repos.map(repo => (\r\n            <div className=\"card mb-3\" key={repo.id}>\r\n                <div className=\"card-body\">\r\n                    <h5>\r\n                        <a\r\n                            href={repo.html_url}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >{repo.name}</a>\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        ))}\r\n    </Fragment>\r\n)\r\n","import React, {Fragment, useContext, useEffect} from 'react';\r\nimport {GithubContext} from \"../context/github/githubContext\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Repos} from \"../components/Repos/Repos\";\r\n\r\nexport const Profile = ({match}) => {\r\n    const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\r\n    const urlName = match.params.name\r\n\r\n    useEffect(() => {\r\n        getUser(urlName)\r\n        getRepos(urlName)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <p className=\"text-center\">Загрузка...</p>\r\n    }\r\n\r\n    const {\r\n        name, company, avatar_url,\r\n        location, bio, blog,\r\n        login, html_url, followers,\r\n        following, public_repos, public_gists\r\n    } = user\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to=\"/\" className=\"btn btn-link\">На главную</Link>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 text-center\">\r\n                            <img\r\n                                src={avatar_url}\r\n                                style={{width: '150px'}}\r\n                                alt={name}\r\n                            />\r\n                            <h1>{name}</h1>\r\n                            {location && <p>Местоположение: {location}</p>}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {\r\n                                bio && <Fragment>\r\n                                    <h3>BIO</h3>\r\n                                    <p>{bio}</p>\r\n                                </Fragment>\r\n                            }\r\n                            <a\r\n                                href={html_url}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"btn btn-dark\"\r\n                            >Открыть профиль</a>\r\n                            <ul>\r\n                                {login && <li>\r\n                                    <strong>Username:</strong>{login}\r\n                                </li>}\r\n                                {company && <li>\r\n                                    <strong>Компания:</strong>{company}\r\n                                </li>}\r\n                                {blog && <li>\r\n                                    <strong>Website:</strong>{blog}\r\n                                </li>}\r\n                            </ul>\r\n                            <div className=\"badge badge-primary\">Подписчики: {followers}</div>\r\n                            <div className=\"badge badge-success\">Подписан: {following}</div>\r\n                            <div className=\"badge badge-info\">Репозитории: {public_repos}</div>\r\n                            <div className=\"badge badge-dark\">Gist: {public_gists}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Repos repos={repos} />\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {AlertContext} from \"../../context/Alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n    if (!alert) return null\r\n\r\n    return (\r\n        <div\r\n            className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\r\n            role=\"alert\"\r\n        >\r\n            {alert.text}\r\n            <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                aria-label=\"Close\"\r\n                onClick={hide}\r\n            >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, action) => action.payload,\r\n    [HIDE_ALERT]: () => null,\r\n    DEFAULT: (state) => state\r\n}\r\n// switch (action.type) {\r\n//     case SHOW_ALERT:\r\n//         return action.payload\r\n//     case HIDE_ALERT:\r\n//         return null\r\n//     default:\r\n//         return state\r\n// }\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\n\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'","import React, {useReducer} from 'react';\r\nimport {AlertContext} from \"./alertContext\";\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n    const show = (text, type = 'secondary') => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {type, text}\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            hide, show, alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n","import {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\r\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\r\n    [SET_LOADING]: state => ({...state, loading: true}),\r\n    [CLEAR_USERS]: state => ({...state, users: []}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}","import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport {GithubContext} from \"./githubContext\";\r\nimport {githubReducer} from \"./GithubReducer\";\r\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRED = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRED}`\r\n}\r\n\r\nexport const GithabState = ({children}) => {\r\n    const initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    }\r\n    const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n    const search = async value => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n        )\r\n\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: response.data.items\r\n        })\r\n    }\r\n\r\n    const getUser = async name => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}?`)\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const getRepos = async name => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const clearUsers = () => dispatch({type: CLEAR_USERS})\r\n\r\n    const setLoading = () => dispatch({type: SET_LOADING})\r\n\r\n    const {user, users, repos, loading} = state\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            setLoading, search, getUser, getRepos, clearUsers,\r\n            user, users, repos, loading\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\nimport {Navbar} from \"./components/Navbar/Navbar\"\nimport {Home} from \"./pages/Home\"\nimport {About} from \"./pages/About\"\nimport {Profile} from \"./pages/Profile\"\nimport {Alert} from \"./components/Alert/Alert\";\nimport {AlertState} from \"./context/Alert/AlertState\";\nimport {GithabState} from \"./context/github/GithubState\";\n\nfunction App() {\n  return (\n      <GithabState>\n          <AlertState>\n              <BrowserRouter>\n                  <Navbar />\n                  <div className=\"container pt-4\">\n                      <Alert alert={{text: \"Test alert\"}} />\n                      <Switch>\n                          <Route path='/' exact component={Home} />\n                          <Route path='/about' component={About} />\n                          <Route path='/profile/:name' component={Profile} />\n                      </Switch>\n                  </div>\n              </BrowserRouter>\n          </AlertState>\n      </GithabState>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}